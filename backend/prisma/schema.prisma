// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(uuid())
  name     String
  email    String   @unique
  password String
  goals    Goal[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Goal {
  id                String      @id @default(uuid())
  name              String
  duration_days     Int
  time_per_day_hours Float
  skill_level      String
  status           String      @default("PLANNING") // PLANNING, ACTIVE, PAUSED, COMPLETED, ARCHIVED, FAILED
  progress_percentage Float     @default(0)
  start_date       DateTime    @default(now())
  end_date         DateTime
  user             User        @relation(fields: [userId], references: [id])
  userId           String
  milestones       Milestone[]
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
}

model Milestone {
  id              String   @id @default(uuid())
  name            String
  week_number     Int
  order_in_goal   Int
  goal            Goal     @relation(fields: [goalId], references: [id], onDelete: Cascade)
  goalId          String
  tasks           Task[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Task {
  id                    String   @id @default(uuid())
  description           String
  original_planned_date DateTime
  current_due_date      DateTime
  completion_date       DateTime?
  status               String   @default("PENDING") // PENDING, COMPLETED, SKIPPED, OVERDUE
  order_in_goal        Int
  week_number          Int
  day_number_in_week   Int
  milestone            Milestone @relation(fields: [milestoneId], references: [id], onDelete: Cascade)
  milestoneId          String
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}

// Goal model can be defined later
